{"version":3,"sources":["views/Login.js","components/ContestsTable.js","views/Home.js","utils/encodingUtils.js","views/Submit.js","views/Register.js","views/AllSubmision.js","views/SubmitCode.js","components/Markdown.js","views/Problem.js","views/CreateProblem.js","views/RecentUserSubmission.js","components/ContestBox.js","views/CreateContest.js","views/Contests.js","views/Profile.js","views/AllProblems.js","views/CreateBlog.js","views/Users.js","views/AllContests.js","views/AdminPanel.js","views/Blog.js","components/Navbar.js","App.js","index.js"],"names":["Login","props","cookie","Cookies","_useState","useState","_useState2","Object","slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","error","setError","handleSubmit","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","body","response","parsedResponse","wrap","_context","prev","next","abrupt","fetch","method","headers","Content-Type","JSON","stringify","sent","json","console","log","status","set","data","maxAge","path","window","location","assign","message","t0","stop","apply","this","arguments","react_default","createElement","Box","className","component","Paper","Typography","color","variant","TextField","label","type","onChange","e","target","value","Button","onClick","ContestsTable","contestsNumber","contests","setContests","useEffect","concat","then","_ref2","_x","style","width","boxShadow","backgroundColor","textAlign","fontSize","padding","map","contest","index","marginInline","i","href","_id","contestName","gap","duration","date","newDate","Date","getTime","getTimezoneOffset","offset","hours","getHours","setHours","convertUTCDateToLocalDate","startTime","toLocaleString","Home","setLoggedIn","problems","setProblems","blogs","setBlogs","token","get","_ref3","err","align","display","alignItems","borderBottom","marginRight","index_esm","size","components_ContestsTable","hi_index_esm","slice","problem","name","tags","justifyContent","borderRadius","ri_index_esm","flexDirection","blog","blogTitle","prepareCode","string","encode","languages","cpp","java","python","Submit","code","setCode","languageID","setLanguageID","languageName","setLanguageName","_useState7","_useState8","stdin","setStdin","_useState9","_useState10","stdout","setStdout","_useState11","_useState12","time","setTime","_useState13","_useState14","memory","setMemory","_useState15","_useState16","loggedIn","_useState17","_useState18","isPending","setIsPending","source_code","language_id","authorization","stderr","marginTop","Fragment","es","height","language","FormControl","fullWidth","InputLabel","id","marginLeft","Select","labelId","MenuItem","rows","marginBlock","multiline","maxRows","LoadingButton","loading","Register","info","setInfo","gender","registrationData","setRegistrationData","handleChange","field","jsonResponse","signedToken","RadioGroup","defaultValue","FormControlLabel","control","Radio","AllSubmision","submisions","setSubmisions","isOpen","setIsOpen","pageNumber","setPageNumber","setMessage","responseJson","colorVerdict","verdict","fontColor","margin","fontWeight","Dialog","open","onClose","BackdropProps","overflow","opacity","DialogContent","default_highlight","atomOneLight","item","createdAt","cursor","problemId","userId","defineProperty","executionTime","memoryUsage","disabled","SubmitCode","user","setUser","useParams","_callee2","_context2","Markdown","statement","react_markdown","children","remarkPlugins","remarkMath","rehypePlugins","rehypeKatex","components","node","inline","objectWithoutProperties","match","exec","light","String","replace","Theme","PreTag","Alert","React","forwardRef","ref","Alert_Alert","elevation","Problem","setProblem","samples","setSamples","_React$useState","_React$useState2","setOpen","handleClose","event","reason","copyToClipboard","content","navigator","clipboard","writeText","timeLimit","memoryLimit","components_Markdown","border","sample","key","InputProps","disableUnderline","input","output","Snackbar","autoHideDuration","Problem_Alert","severity","sx","CreateProblem","setName","contestId","setContestId","setTimeLimit","setMemoryLimit","setStatement","_testcases","setTestcases","setTags","_callee3","_JSON$parse","testcases","_yield$response$json","newProblemId","_context3","parse","split","forEach","element","sampleResponse","_yield$sampleResponse","objectSpread","_yield$sampleResponse2","_x2","placeholder","RecentUserSubmission","userSubmission","setUserSubmission","ContestBox","setproblems","selectedProblems","setSelectedProblems","contestData","setContestData","handleContestChange","handleCreate","keys","length","includes","push","min","idx","paddingBlock","CreateContest","components_ContestBox","Contests","setContest","number","setNumber","Profile","profile","setProfile","userSubmissions","setUserSubmissions","Avatar","src","country","AllProblems","allProblems","setAllProblems","page","setPage","more","setMore","TableContainer","TableHead","TableRow","TableCell","TableBody","Link","CreateBlog","setBlogTitle","setBlog","content-type","blogBody","options","minimap","enabled","Users","setCountry","users","setUsers","alt","title","Label","marginBottom","AllContests","AdminPanel","react_router_dom","to","Blog","blogId","Navbar","anchorEl","setAnchorEl","go_index_esm","currentTarget","aria-controls","undefined","aria-haspopup","aria-expanded","Menu","App","theme","createTheme","palette","primary","main","secondary","contrastText","ThemeProvider","components_Navbar","react_router","exact","views_Register","views_Home","views_Login","views_Submit","views_SubmitCode","views_AllSubmision","views_Problem","views_RecentUserSubmission","views_Contests","views_AllProblems","views_Users","views_AllContests","views_Profile","views_Blog","views_AdminPanel","views_CreateProblem","views_CreateContest","views_CreateBlog","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.71dce9a4.chunk.js","sourcesContent":["import { Box, Paper, TextField, Typography, Button } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport Cookies from 'universal-cookie';\n\nimport \"../styles/login.css\";\n\nconst Login = (props) => {\n    const cookie = new Cookies();\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const handleSubmit = async () => {\n        setError(\"\");\n        if(!username || username === \"\") {\n            setError(\"Username cannot be empty.\");\n            return;\n        }\n        if(!password || password === \"\"){\n            setError(\"Password cannot be empty.\");\n            return;\n        }\n            \n        const body = { username, password };\n        try {\n            const response = await fetch(\"http://localhost:3000/api/v1/user/login\", {\n                method:\"POST\",\n                headers: {\n                    \"Content-Type\":\"application/json\"\n                },\n                body: JSON.stringify(body)\n            });\n            const parsedResponse = await response.json();\n            console.log(parsedResponse);\n            if(response.status === 200) {\n                const maxAge = 1*24*60*60;\n                cookie.set(\"jwt\", parsedResponse.data, { maxAge, path:\"/\" });\n                window.location.assign(\"/home\");\n            } else {\n                setError(parsedResponse.message);\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    return (\n        <Box className=\"login-wrapper\">\n            <Box className=\"login\" component={Paper}>\n                <Typography color=\"primary\" variant=\"h4\"> Login </Typography>\n                <TextField color = \"secondary\" label=\"Username\" variant=\"standard\" type=\"text\" onChange={(e) => {setUsername(e.target.value)}} />\n                <TextField color = \"secondary\" label=\"Password\" variant=\"standard\" type=\"password\" onChange={(e) => {setPassword(e.target.value)}} />\n                <Button variant=\"contained\" onClick={handleSubmit}> Submit </Button>\n                { error && <Typography color=\"red\" variant=\"h6\"> {error} </Typography> }\n            </Box>\n        </Box>\n    );\n}\n\nexport default Login;","import React, { useState, useEffect } from 'react';\nimport '../styles/users.css'\n\nconst ContestsTable = ({ contestsNumber }) => {\n    const [contests, setContests] = useState([]);\n\n    useEffect(() => {\n        fetch(`http://localhost:3000/api/v1/contest?limit=${contestsNumber}`)\n            .then(async (response) => {\n                const parsedResponse = await response.json();\n                if (response.status === 200) {\n                    setContests(parsedResponse.data);\n                }\n            })\n    }, []);\n    const rowColor = (i) => {\n        return i % 2 != 1 ? '#f2f2f2' : '#fafafa'\n    }\n    const fontColor = (i) => {\n        return i % 2 != 1 ? 'black' : 'black'\n    }\n    function convertUTCDateToLocalDate(date) {\n        var newDate = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\n\n        var offset = date.getTimezoneOffset() / 60;\n        var hours = date.getHours();\n\n        newDate.setHours(hours - offset - 3);\n\n        return newDate;\n    }\n\n    return (\n        <table className='table' style={{ width: \"70%\", boxShadow: \"0px 1px 12px #888888\" }}>\n            <tr className='header' style ={{backgroundColor:'#343a40'}}>\n                <th style={{ textAlign: 'center', fontSize: \"15px\",color:'#fafafa' }}>Contest Name</th>\n                <th style={{ textAlign: 'center', padding: '1em', fontSize: \"15px\",color:'#fafafa' }}>Duration</th>\n                <th style={{ textAlign: 'center', fontSize: \"15px\",color:'#fafafa' }}>Starting Time</th>\n            </tr>\n\n            {contests &&\n                contests.map((contest, index) => {\n                    return (\n                        <tr style={{ marginInline: '1em', backgroundColor: rowColor(index) }}>\n                            <td style={{ textAlign: 'center', color: fontColor(index) }} >\n                                <a href={\"contests/\" + contest._id} style={{color:'#007bff'}}>{contest.contestName}</a>\n                            </td>\n                            <td style={{ textAlign: 'center', padding: '1em', gap: \"12px\", color: fontColor(index) }}>\n                                <div>{contest.duration} Minutes</div>\n                            </td>\n                            <td style={{ textAlign: 'center', color: fontColor(index) }}>\n                                {convertUTCDateToLocalDate(new Date(contest.startTime)).toLocaleString()}\n                            </td>\n                        </tr>\n                    )\n                })\n            }\n\n        </table>\n    );\n}\n\nexport default ContestsTable;","import React, { useState, useEffect } from 'react';\nimport Cookies from 'universal-cookie';\nimport { Typography } from \"@mui/material\";\nimport { MdEmojiEvents } from 'react-icons/md';\nimport { HiPuzzle } from 'react-icons/hi';\nimport { RiArticleLine } from 'react-icons/ri';\nimport ContestsTable from '../components/ContestsTable';\nimport '../styles/Home.css'\nconst Home = (props) => {\n    const cookie = new Cookies();\n\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [problems, setProblems] = useState([]);\n    const [blogs, setBlogs] = useState([]);\n\n    useEffect(() => {\n        const token = cookie.get(\"jwt\");\n        try {\n            fetch(\"http://localhost:3000/api/v1/user/jwt\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({ token })\n            }).then(async (response) => {\n                const parsedResponse = await response.json();\n                console.log(parsedResponse);\n                if (response.status === 200) {\n                    setLoggedIn(true);\n                }\n            })\n            fetch(`http://localhost:3000/api/v1/problem/all?page=1`, {\n                method: \"GET\"\n            })\n                .then((response) => response.json())\n                .then(({ message, data }) => { setProblems(data); });\n            fetch('http://localhost:3000/api/v1/blog')\n                .then((response) => response.json())\n                .then(({ message, data }) => { setBlogs(data); });\n        } catch (err) {\n            console.log(err);\n        }\n    }, []);\n\n    const rowColor = (i) => {\n        return i % 2 != 1 ? '#f2f2f2' : '#fafafa'\n    }\n    return (\n        <div className='home-wrapper'>\n            <div className='column-one'>\n                <div align='left' style={{ display: 'flex', alignItems: 'center', borderBottom: '1px solid', width: 'fit-content' }}>\n                    <Typography align='left' style={{ fontSize: \"2em\", marginRight: '.3em' }}>Recent Contests</Typography>\n                    <MdEmojiEvents color='#f6a600' size='2em' />\n                </div>\n                <ContestsTable contestsNumber={5} />\n                <div align='left' style={{ display: 'flex', alignItems: 'center', borderBottom: '1px solid', width: 'fit-content' }}>\n                    <Typography align='left' style={{ fontSize: \"2em\", marginRight: '.3em' }}>Recent Problems</Typography>\n                    <HiPuzzle color='#f6a600' size='2em' />\n                </div>\n                <div className='problemset-wrapper'>\n                    <table className='table' style={{ width: \"70%\", boxShadow: \"0px 1px 12px #888888\", backgroundColor: '' }}>\n                        <tr className='header' style={{ backgroundColor: '#343a40' }}>\n                            <th style={{ textAlign: 'center', fontSize: \"15px\", color: '#fafafa' }}>Problem</th>\n                            <th style={{ textAlign: 'center', fontSize: \"15px\", color: '#fafafa' }}>Tags</th>\n                            <th style={{ textAlign: 'center', padding: '1em', fontSize: \"15px\", color: '#fafafa' }}># Of Solvers</th>\n                        </tr>\n\n                        {problems &&\n                            problems.slice(0, 7).map((problem, index) => {\n                                return (\n                                    <tr style={{ marginInline: '1em', backgroundColor: rowColor(index) }}>\n                                        <td style={{ textAlign: 'center' }} >\n                                            <a className='links-home' href={\"problem/\" + problem._id}  target='_blank'>{problem.name}</a>\n                                        </td>\n                                        <td style={{ textAlign: 'center', padding: '1em', gap: \"12px\" }}>\n                                            <div>{problem.tags}</div>\n                                        </td>\n                                        <td style={{ textAlign: 'center', gap: \"12px\" }}>\n                                            <div>50</div>\n                                        </td>\n                                    </tr>\n                                )\n                            })\n                        }\n\n                    </table>\n                </div>\n            </div>\n            <div className='column-two'>\n                <div>\n                    <div align='center' style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', padding:'1em',backgroundColor: '#343a40', borderRadius: '8px 8px 0 0 ' }}>\n                        <Typography align='center' style={{ fontSize: \"1.3em\", marginRight: '.3em', color: '#fafafa' }}>Recent Blogs</Typography>\n                        <RiArticleLine color='#f6a600' size='2em' />\n                    </div>\n                    <div style={{display:'flex', flexDirection:'column'}}>\n                        {blogs && blogs.map((blog, index) => {\n                            return (\n                                <a className='links-home' href={\"blog/\" + blog._id} style={{  padding:'1em', fontSize:'larger' }} target='_blank'>\n                                    {blog.blogTitle}\n                                </a>\n                            )\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","import { encode } from \"base-64\";\n\nexport const prepareCode = (string) => {\n   return encode(string);\n}\n\n/*\n#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n    String name;\n    cin>>name;\n    cout << \"Hello \" + name;\n    return 0;\n}\n*/","import React, { useState, useEffect } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { prepareCode } from \"../utils/encodingUtils\";\nimport Editor from \"@monaco-editor/react\"\nimport { TextField, FormControl, Select, MenuItem, InputLabel, Button } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\n\nconst SAMPLE_CPP = `\n#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n    string name;\n    cin>>name;\n    cout << \"Hello \" + name;\n    return 0;\n}`\n\nconst CPP_ID = 53;\nconst languages = {\n    cpp: 53,\n    java: 62,\n    python: 71\n}\nconst Submit = (props) => {\n    const cookie = new Cookies();\n    const [code, setCode] = useState(SAMPLE_CPP);\n    const [languageID, setLanguageID] = useState(53);\n    const [languageName, setLanguageName] = useState(\"cpp\");\n    const [stdin, setStdin] = useState(\"\");\n    const [stdout, setStdout] = useState(\"\");\n    const [time, setTime] = useState(null);\n    const [memory, setMemory] = useState(null);\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [isPending, setIsPending] = useState(false);\n\n    const hanldeLanguageChange = (e) => {\n        const name = e.target.value;\n        const id = languages[name];\n        console.log(name, id)\n        setLanguageName(name);\n        setLanguageID(id);\n    }\n    const handleStdin = (e) => {\n        setStdin(e.target.value)\n    }\n    const handleSubmit = async () => {\n        setIsPending(true)\n        const body = { stdin, source_code: prepareCode(code), language_id: languageID };\n        try {\n            console.log(body);\n            const response = await fetch(\"http://localhost:3000/api/v1/submission/\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"authorization\": `bearer ${cookie.get(\"jwt\")}`\n                },\n                body: JSON.stringify(body)\n            });\n            const parsedResponse = await response.json();\n            console.log(parsedResponse);\n            if (parsedResponse.data === 'Compilation Error') {\n                setStdout(parsedResponse.data)\n                setIsPending(false)\n                return\n            }\n            if (parsedResponse.data.stderr) {\n                setStdout(parsedResponse.data.stderr)\n            }\n            else setStdout(parsedResponse.data.stdout)\n            setIsPending(false)\n            setTime(parsedResponse.data.time)\n            setMemory(parsedResponse.data.memory)\n        } catch (err) {\n            setIsPending(false)\n            setStdout(\"ERROR\")\n            console.log(err);\n        }\n    }\n\n    useEffect(() => {\n        const token = cookie.get(\"jwt\");\n        if (!token) {\n            window.location.assign(\"/login\");\n        }\n        try {\n            fetch(\"http://localhost:3000/api/v1/user/jwt\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({ token })\n            }).then((response) => {\n                const parsedResponse = response.json();\n                console.log(parsedResponse);\n                if (response.status === 200) {\n                    setLoggedIn(true);\n                } else {\n                    cookie.set(\"jwt\", \"\", { maxAge: 1, path: \"/\" });\n                    window.location.assign(\"/login\");\n                }\n            })\n        } catch (err) {\n            console.log(err);\n        }\n    }, []);\n\n    return (\n        <div style={{ marginTop: \"50px\", display: 'flex' }}> {loggedIn && <>\n\n            <Editor\n                height=\"70vh\"\n                width=\"70vw\"\n                language={languageName}\n                onChange={(e) => setCode(e)}\n                className=\"editor\"\n            />\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\" style={{ marginLeft: '2em' }}>Language</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        label = \"\"\n                        style={{ width: '75%', marginLeft: '2em', backgroundColor: 'white' }}\n                        color='secondary'\n                        value={languageName}\n                        onChange={hanldeLanguageChange}\n                    >\n                        <MenuItem value=\"cpp\"> C++ </MenuItem>\n                        <MenuItem value=\"java\"> Java</MenuItem>\n                        <MenuItem value=\"python\"> Python</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"filled-multiline-flexible\"\n                    label=\"Input\"\n                    rows={10}\n                    style={{ backgroundColor: 'white', marginLeft: '2em', marginBlock: '2em' }}\n                    multiline\n                    maxRows={4}\n                    value={stdin}\n                    onChange={handleStdin}\n                    variant=\"outlined\"\n                />\n                <TextField\n                    id=\"filled-multiline-flexible\"\n                    label=\"Output\"\n                    rows={10}\n                    style={{ backgroundColor: 'white', marginLeft: '2em' }}\n                    multiline\n                    maxRows={4}\n                    value={stdout}\n                    variant=\"outlined\"\n                />\n                <br />\n\n                <div style={{marginLeft:'2em'}}>\n                    {!isPending && <Button variant = \"contained\" color = \"secondary\" fullWidth onClick={handleSubmit}> Run </Button>}               \n                    {isPending &&  <LoadingButton variant = \"contained\" color = \"secondary\" fullWidth loading > Submit </LoadingButton>}               \n                </div>\n                {memory && time && (<><span style={{marginLeft:'2em', marginTop:'1em'}}>Execution time: {time} s</span><br />\n                    <span style={{marginLeft:'2em'}}>Memory Usage: {memory} KB</span><br /></>)}\n            </div>\n\n        </>} </div>\n    );\n}\n\nexport default Submit;\n/*                <div>\n                    <select value={languageName} onChange={hanldeLanguageChange} >\n                        <option value=\"cpp\"> C++ </option>\n                        <option value=\"java\"> Java </option>\n                        <option value=\"python\"> Python </option>\n                    </select>\n                </div> */","import React, { useState } from \"react\";\nimport Cookies from 'universal-cookie';\nimport { Box, Button, TextField, Typography, RadioGroup, Radio, FormControlLabel, Paper } from \"@mui/material\";\n\nimport \"../styles/register.css\";\n\nconst Register = (props) => {\n    const cookie = new Cookies();\n    const [info, setInfo] = useState(\"\");\n    const [registrationData, setRegistrationData] = useState({\n        'gender': 'male'\n    });\n\n    const handleChange = (e, field) => {\n        const value = e.target.value\n        setRegistrationData((registrationData) => {\n            registrationData[field] = value;\n            return registrationData\n        })\n    }\n    \n    const handleSubmit = async () => {\n        console.log(registrationData)\n        const response = await fetch('http://localhost:3000/api/v1/user/signup', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(registrationData)\n        })\n        const jsonResponse = await response.json();\n        if(response.status === 200){\n            const maxAge = 1*24*60*60;\n            cookie.set(\"jwt\", jsonResponse.data.signedToken, { maxAge, path:\"/\" });\n            window.location.assign(\"/home\");\n        }\n        else setInfo(jsonResponse.message)\n    }\n\n    return (\n        <Box className=\"register-wrapper\">\n            <Box className=\"register flex-col-gap\" component={Paper}>\n                <Box className=\"flex-col-gap align-center\"> \n                    <Typography color=\"primary\" variant=\"h4\">Register</Typography>\n                </Box>\n                <TextField type=\"text\" label=\"Name\" onChange={(e) => handleChange(e, \"name\")} />\n                <Box className=\"flex-row-gap\">\n                    <TextField type=\"text\" label=\"Username\" onChange={(e) => handleChange(e, \"username\")} />\n                    <TextField type=\"password\" label=\"Password\" onChange={(e)=> handleChange(e, \"password\")} />\n                </Box>\n                <TextField type=\"email\" label=\"Email\" onChange={(e) => handleChange(e, \"email\")} />\n                <Box className=\"flex-row-gap align-center\">\n                    <Typography color=\"primary\">Gender</Typography>\n                    <RadioGroup \n                        defaultValue=\"male\"\n                        onChange={e => handleChange(e, \"gender\")}>\n                            <FormControlLabel value=\"Male\" control={<Radio />} label=\"Male\" />\n                            <FormControlLabel value=\"Female\" control={<Radio />} label=\"Female\" />\n                    </RadioGroup>            \n                </Box>\n                <TextField type=\"text\" label=\"Country\" onChange={((e) => handleChange(e, \"country\"))} />\n                <Box className=\"flex-col-gap align-center\"> \n                    <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\"> Register </Button>\n                </Box>\n                {info && <Typography variant=\"h6\" color=\"red\">{info}</Typography>}\n            </Box>\n        </Box>\n    );\n}\n\nexport default Register;","import React, { useEffect, useState } from \"react\";\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { atomOneLight } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { Button } from \"@mui/material\";\n\nconst AllSubmision = () => {\n    const [submisions, setSubmisions] = useState([]);\n    const [isOpen, setIsOpen] = useState(false);\n    const [code, setCode] = useState('');\n    const [pageNumber, setPageNumber] = useState(1);\n    const [message, setMessage] = useState(\"\");\n\n\n\n    useEffect(() => {\n        try {\n            fetch(\"http://localhost:3000/api/v1/submission?page=\" + pageNumber, {\n\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n            })\n                .then((response => response.json()))\n                .then((responseJson) => {\n                    console.log(responseJson)\n                    setSubmisions(responseJson.data);\n                    setMessage(responseJson.message);\n\n                })\n        }\n        catch (err) {\n            console.log(err);\n        }\n    }, [pageNumber]);\n    const handleClose = () => {\n        setIsOpen(false);\n    };\n    const handleNextPage = () => {\n        if (message === \"true\")\n            setPageNumber(pageNumber + 1)\n\n\n    };\n    const handleBackPage = () => {\n        if (pageNumber > 1)\n            setPageNumber(pageNumber - 1)\n    };\n    const colorVerdict = (verdict) => {\n        switch (verdict) {\n            case \"Accepted\":\n                return \"#0a0\"\n            default:\n                return \"#ff0000\"\n        }\n    }\n    function convertUTCDateToLocalDate(date) {\n        var newDate = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\n\n        var offset = date.getTimezoneOffset() / 60;\n        var hours = date.getHours();\n\n        newDate.setHours(hours - offset - 3);\n\n        return newDate;\n    }\n\n\n    const rowColor = (i) => {\n        return i % 2 != 1 ? '#343a40' : '#fafafa'\n    }\n    const fontColor = (i) => {\n        return i % 2 != 1 ? '#fff' : 'black'\n    }\n\n    return (\n        <center style={{ padding: '2em',display:'flex', flexDirection:'column',justifyContent:'center', alignItems:'center' }}>\n            {submisions && <table className='table' style={{ width: \"90%\", boxShadow: \"0px 1px 12px #888888\" }}>\n                <tr className='header' style={{ margin: '1em' }}>\n                    <th style={{ fontWeight: \"bolder\", fontSize: '1.2rem' }}>Code</th>\n                    <th style={{ fontWeight: \"bolder\", fontSize: '1.2rem' }}>Problem</th>\n                    <th style={{ fontWeight: \"bolder\", fontSize: '1.2rem' }}>User</th>\n                    <th style={{ fontWeight: \"bolder\", fontSize: '1.2rem' }}>Language</th>\n                    <th style={{ fontWeight: \"bolder\", fontSize: '1.2rem' }}>Verdict</th>\n                    <th style={{ fontWeight: \"bolder\", fontSize: '1.2rem' }}>Time</th>\n                    <th style={{ fontWeight: \"bolder\", fontSize: '1.2rem' }}>Memory</th>\n                    <th style={{ fontWeight: \"bolder\", fontSize: '1.2rem' }}>Issued at</th>\n                </tr>\n                <Dialog\n                    open={isOpen}\n                    onClose={handleClose}\n                    BackdropProps={{\n                        backgroundColor: \"transparent\",\n                        boxShadow: \"none\",\n                        overflow: \"hidden\",\n                        opacity: \"50%    \"\n                    }\n                    }\n                >\n\n                    <DialogContent style={{ width: \"1300px\", height: \"700px\" }}>\n                        <SyntaxHighlighter language=\"cpp\" style={atomOneLight}>\n                            {code}\n                        </SyntaxHighlighter>\n                    </DialogContent>\n\n                </Dialog>\n                {submisions.map((item, index) => {\n                    var time = convertUTCDateToLocalDate(new Date(item.createdAt)).toLocaleString();\n                    return (\n                        <tr style={{ marginInline: '1em', backgroundColor: rowColor(index) }}>\n                            <td style={{ fontWeight: \"700\", textAlign: 'center', cursor: 'pointer', color: fontColor(index) }} onClick={() => { setIsOpen(true); setCode(item.code) }}>\n                                {item._id}\n                            </td>\n                            <td style={{ textAlign: 'center', display: 'flex', justifyContent: 'center', padding: '1em', gap: \"12px\", color: fontColor(index) }}>\n                                <a href={`/problem/${item.problemId._id}`}>\n                                    {item.problemId.name}\n                                </a>\n                            </td>\n                            <td style={{ textAlign: 'center', justifyContent: 'center', padding: '1em', gap: \"12px\", color: fontColor(index) }}>\n                                <a href={`/user/${item.userId._id}`}>\n                                    {item.userId.username}\n                                </a>\n                            </td>\n                            <td style={{ textAlign: 'center', padding: '1em', gap: \"12px\", color: fontColor(index) }}>\n                                {item.language}\n                            </td>\n                            <td style={{ fontWeight: \"700\", color: colorVerdict(item.verdict), textAlign: 'center', color: fontColor(index) }}>\n                                {item.verdict}\n                            </td>\n                            <td style={{ textAlign: 'center', padding: '1em', gap: \"12px\", color: fontColor(index) }}>\n                                {item.executionTime}\n                            </td>\n                            <td style={{ textAlign: 'center', padding: '1em', gap: \"12px\", color: fontColor(index) }}>\n                                {item.memoryUsage}\n                            </td>\n                            <td style={{ textAlign: 'center', padding: '1em', gap: \"12px\", color: fontColor(index) }}>\n                                {time}\n                            </td>\n\n                        </tr>\n\n                    )\n                })}\n            </table>}\n            <div style={{display:'flex', justifyContent:'space-around',  width:'90%' , marginTop:'2em'}}>\n                <Button color=\"secondary\" onClick={handleBackPage} variant=\"contained\" disabled={pageNumber === 1}> Previous </Button>\n                <Button color=\"secondary\" style={{width:'90px'}}onClick={handleNextPage} variant=\"contained\" disabled={message === \"false\"}> Next </Button>\n            </div>\n        </center>\n\n    );\n\n}\nexport default AllSubmision;","import React, { useState, useEffect } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { prepareCode } from \"../utils/encodingUtils\";\nimport Editor from \"@monaco-editor/react\"\nimport { useParams } from \"react-router-dom\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Snackbar from '@mui/material/Snackbar';\nimport { TextField, FormControl, Select, MenuItem, InputLabel, Button } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nconst SAMPLE_CPP = `\n#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n    string name;\n    cin>>name;\n    cout << \"Hello \" + name;\n    return 0;\n}`\n\nconst CPP_ID = 53;\nconst languages = {\n    cpp: 53,\n    java: 62,\n    python: 71\n}\nconst SubmitCode = () => {\n    const cookie = new Cookies();\n    const [code, setCode] = useState(SAMPLE_CPP);\n    const [languageID, setLanguageID] = useState(53);\n    const [languageName, setLanguageName] = useState(\"cpp\");\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [user, setUser] = useState({});\n    const [isPending, setIsPending] = useState(false);\n    const { problemId } = useParams();\n\n    const hanldeLanguageChange = (e) => {\n        const name = e.target.value;\n        const id = languages[name];\n        console.log(name, id)\n        setLanguageName(name);\n        setLanguageID(id);\n    }\n\n    const handleSubmit = async () => {\n        setIsPending(true)\n        const body = { source_code: prepareCode(code), language_id: languageID, problemId };\n        try {\n            console.log(body);\n            const response = await fetch(\"http://localhost:3000/api/v1/submission/new\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"authorization\": `bearer ${cookie.get(\"jwt\")}`\n                },\n                body: JSON.stringify(body)\n            });\n            const parsedResponse = await response.json();\n            window.location.assign(`/recent/${user.id}`)\n            console.log(parsedResponse);\n        } catch (err) {\n            console.log(err);\n            setIsPending(false)\n\n        }\n    }\n\n    useEffect(() => {\n        const token = cookie.get(\"jwt\");\n        if (!token) {\n            window.location.assign(\"/login\");\n        }\n        try {\n            fetch(\"http://localhost:3000/api/v1/user/jwt\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({ token })\n            }).then(async (response) => {\n                const parsedResponse = await response.json();\n                console.log(parsedResponse);\n                if (response.status === 200) {\n                    setLoggedIn(true);\n                    setUser(parsedResponse.data)\n                    console.log(parsedResponse.data)\n                } else {\n                    cookie.set(\"jwt\", \"\", { maxAge: 1, path: \"/\" });\n                    window.location.assign(\"/login\");\n                }\n            })\n        } catch (err) {\n            console.log(err);\n        }\n    }, []);\n\n    return (\n        <> {loggedIn === true && <div style={{ display: 'flex', marginTop: '70px' }}>\n            <Editor\n                height=\"70vh\"\n                width=\"70vw\"\n                language={languageName}\n                onChange={(e) => setCode(e)}\n                className=\"editor\"\n            />\n            <div style={{ display: 'flex', flexDirection: 'column', width:'250px', gap:'2rem'}}>\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\" style={{ marginLeft: '2em' }}>Language</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        label=\"\"\n                        style={{ width: '87%', marginLeft: '2em',marginTop:'1em', backgroundColor: 'white' }}\n                        color='secondary'\n                        value={languageName}\n                        onChange={hanldeLanguageChange}\n                    >\n                        <MenuItem value=\"cpp\"> C++ </MenuItem>\n                        <MenuItem value=\"java\"> Java</MenuItem>\n                        <MenuItem value=\"python\"> Python</MenuItem>\n                    </Select>\n                </FormControl>\n                <div style={{ marginLeft: '2em' }}>\n                    {!isPending && <Button variant=\"contained\" color=\"secondary\" fullWidth onClick={handleSubmit}> Submit </Button>}\n                    {isPending && <LoadingButton variant=\"contained\" color=\"secondary\" fullWidth loading > Submit </LoadingButton>}\n                </div>\n            </div>\n\n        </div>} </>\n    );\n}\n\nexport default SubmitCode;","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Light as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { tomorrowNight as Theme } from \"react-syntax-highlighter/dist/esm/styles/hljs\"; \nimport remarkMath from 'remark-math'\nimport rehypeKatex from 'rehype-katex'\n\nconst Markdown = (props) => {\n    const { statement } = props;\n    \n    return (\n        <div className=\"preview-wrapper\">\n            <ReactMarkdown\n                children={statement}\n                remarkPlugins={[remarkMath]}\n                rehypePlugins={[rehypeKatex]}\n                components={{\n                    code({node, inline, className, children, ...props}) {\n                        const match = /language-(\\w+)/.exec(className || '')\n                        return !inline && match ? (\n                            <SyntaxHighlighter\n                                className=\"preview\"\n                                children={String(children).replace(/\\n$/, '')}\n                                style={Theme}\n                                language={match[1]}\n                                PreTag=\"div\"\n                                {...props}\n                            />\n                            ) : (\n                                <code className={className} {...props}>\n                                { children }\n                            </code>\n                        )\n                    }\n                }}\n            />\n        </div>\n    );\n}\n \nexport default Markdown;","import { Button, TableCell, TableContainer, TableHead, TextField, Typography } from '@mui/material';\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Markdown from \"../components/Markdown\";\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport '../styles/problem.css'\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\nconst Problem = () => {\n    const [problem, setProblem] = useState(null);\n    const [samples, setSamples] = useState([]);\n    const { problemId } = useParams();\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClick = () => {\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    };\n    useEffect(() => {\n        try {\n            fetch(`http://localhost:3000/api/v1/problem/${problemId}`, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n            }).then((response => response.json()))\n                .then((responseJson) => {\n                    setProblem(responseJson.data);\n                })\n            fetch(`http://localhost:3000/api/v1/sample/${problemId}`, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n            }).then((response => response.json()))\n                .then((responseJson) => {\n                    setSamples(responseJson.data);\n                })\n        }\n        catch (err) {\n            console.log(err);\n        }\n    }, []);\n\n    const copyToClipboard = (content) => {\n        navigator.clipboard.writeText(content);\n        setOpen(true);\n\n    }\n\n    return (\n        <>\n            {problem &&\n                <>\n                    <div className='problem-wrapper'>\n                        <div className='problem-header'>\n                            <div className='constraints'>\n                                <Typography color='secondary' style={{ fontSize: '.82rem' }}>Time Limit: {problem.timeLimit} seconds</Typography>\n                                <Typography color='secondary' style={{ fontSize: '.82rem' }}>Memory Limit: {problem.memoryLimit} MB</Typography>\n                            </div>\n                            <div className='proble-name'>\n                                <Typography color='white' style={{ fontSize: '1.75rem' }}>{problem.name} </Typography>\n\n                            </div>\n                            <div className='options'>\n                                <Button variant=\"outlined\" color='secondary' style={{ marginRight: '1em' }} href=\"/submit\">Custom Run</Button>\n                                <Button variant=\"contained\" color='secondary' href={\"/submit/\" + problemId}>Submit</Button>\n                            </div>\n                        </div>\n                        <div className='statment'>\n                            <Markdown statement={problem.statement} />\n                            <Typography color='black' style={{ fontSize: '1.8rem' }}>Samples</Typography>\n                            <div >\n                                <table style={{ width: \"100%\" }}>\n                                    <tr style={{ padding: '2em', backgroundColor: '#dee2e6', border: '1px solid #ddd' }}>\n                                        <th style={{ padding: '1.6em', fontSize: '20px' }}>Input</th>\n                                        <th style={{ padding: '1.6em', fontSize: '20px' }}>Output</th>\n                                    </tr>\n                                    {samples && samples.map((sample, index) => {\n                                        return (\n                                            <>\n                                                <tr key={index} style={{ padding: '2em', borderBottom: '1px solid black' }}>\n                                                    <td>\n                                                        <div style={{ padding: '1.3em', fontSize: '18px', display: 'flex', gap: '60%' }}>\n                                                            <TextField variant=\"standard\" InputProps={{\n                                                                disableUnderline: true, // <== added this\n                                                            }} value={sample.input} disabled={true} multiline style={{ border: 'none' }} />\n\n                                                            <Button key={index + 1} style={{height:'fit-content'}} color='secondary' variant='outlined' onClick={() => { copyToClipboard(sample.input) }}>Copy</Button>\n                                                        </div>\n                                                    </td>\n\n\n                                                    <td >\n                                                        <div style={{ padding: '1.3em', fontSize: '18px', display: 'flex', gap: '60%' }}>\n                                                            <TextField variant=\"standard\" InputProps={{\n                                                                disableUnderline: true, // <== added this\n                                                            }} value={sample.output} disabled={true} multiline />\n                                                            <Button key={index + 2} style={{height:'fit-content'}} color='secondary' variant='outlined' onClick={() => { copyToClipboard(sample.output) }}>Copy</Button>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                                <tr key={index} >\n                                                    <td ><hr /></td>\n                                                    <td ><hr /></td>\n                                                </tr>\n                                            </>\n                                        )\n                                    })}\n                                </table>\n                            </div>\n                        </div>\n                        <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n                            <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\n                                This is a success message!\n                            </Alert>\n                        </Snackbar>\n                    </div>\n                </>\n\n            }\n        </>\n    );\n}\n\nexport default Problem;","import React, { useEffect, useState } from \"react\";\nimport Markdown from \"../components/Markdown\";\nimport Editor from \"@monaco-editor/react\";\nimport \"../styles/CreateProblem.css\";\nimport 'katex/dist/katex.min.css';\nimport Cookies from \"universal-cookie\";\n\nconst statementSample = `## Problem Statement\nGiven numbers $$(A, B, C)$$:\n\n- Calculate $$Z$$ where $$Z = \\\\frac{A + B + C}{3}$$\n\n## Input\n\n- First line $$A: (1 \\\\le A \\\\le 1000)$$\n- Second line $$B: (1 \\\\le B \\\\le 1000)$$\n- Third line $$C: (1 \\\\le C \\\\le 1000)$$\n\n## Output\n\nOutput the result of the calculation\n`\nconst testcasesSample = `{\n    \"samples\":[\n        {\n            \"input\":\"1\\\\n2\\\\n3\",\n            \"output\": \"6\"\n        }\n    ],\n    \"testcases\": [\n        {\n            \"input\": \"15\\\\n15\\\\n15\",\n            \"output\": \"45\"\n        }\n    ]\n}`\n\n// more information about math markdown\n// https://levelup.gitconnected.com/adding-katex-and-markdown-in-react-7b70694004ef\n// full cheat sheet https://users.dickinson.edu/~richesod/latex/latexcheatsheet.pdf\n\nconst CreateProblem = (props) => {\n    const cookie = new Cookies();\n    const [name, setName] = useState(\"\");\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [contestId, setContestId] = useState(null);\n    const [timeLimit, setTimeLimit] = useState(null);\n    const [memoryLimit, setMemoryLimit] = useState(null);\n    const [statement, setStatement] = useState(statementSample);\n    const [_testcases, setTestcases] = useState(testcasesSample);\n    const [tags, setTags] = useState([]);\n    const [info, setInfo] = useState(\"\");\n\n    const handleSubmit = async () => {\n        setInfo(\"\");\n        const { samples, testcases } = JSON.parse(_testcases);\n        if(!samples) {setInfo(\"Testcases must have samples\"); return;}\n        if(!testcases) {setInfo(\"Testcases must have testcases\"); return;}\n        if(!name) { setInfo(\"Invalid Problem Name\"); return; }\n        if(!timeLimit) { setInfo(\"Invalid Time Limit\"); return; }\n        if(!memoryLimit) { setInfo(\"Invalid Memory Limit\"); return; }\n        if(!tags) { setInfo(\"Invalid Problem tags\"); return; }\n\n        const body = { name, statement, contestId, timeLimit, memoryLimit, tags: tags.split(\" \") };\n        console.log(samples);\n        console.log(testcases);\n        const response = await fetch(\"http://localhost:3000/api/v1/problem/new\", {\n            method:\"POST\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"authorization\": `bearer ${cookie.get(\"jwt\")}`\n            },\n            body: JSON.stringify(body)\n        });\n\n        const { message, data } = await response.json();\n        const newProblemId = data._id;\n        if(newProblemId) {\n            samples.forEach( async (element) => {\n                const sampleResponse = await fetch(\"http://localhost:3000/api/v1/sample/new\", {\n                    method:\"POST\",\n                    headers: {\n                        \"Content-Type\":\"application/json\",\n                        \"authorization\": `bearer ${cookie.get(\"jwt\")}`\n                    },\n                    body: JSON.stringify({ ...element, problemId: newProblemId })\n                });\n                const { message, data } = await sampleResponse.json();\n                console.log(message);\n            });\n            testcases.forEach( async (element) => {\n                const sampleResponse = await fetch(\"http://localhost:3000/api/v1/testcase/new\", {\n                    method:\"POST\",\n                    headers: {\n                        \"Content-Type\":\"application/json\",\n                        \"authorization\": `bearer ${cookie.get(\"jwt\")}`\n                    },\n                    body: JSON.stringify({ ...element, problemId: newProblemId })\n                });\n                const { message, data } = await sampleResponse.json();\n                console.log(message);\n            });   \n        }\n    }\n\n\n    useEffect(() => {\n        const token = cookie.get(\"jwt\");\n        if(!token) {\n            window.location.assign(\"/login\");\n        }\n        try {\n            fetch(\"http://localhost:3000/api/v1/user/jwt\", {\n                method:\"POST\",\n                headers: {\n                    \"Content-Type\":\"application/json\"\n                },\n                body: JSON.stringify({ token })\n            }).then((response)=>{\n                const parsedResponse = response.json();\n                if(response.status === 200) {\n                    setLoggedIn(true);\n                } else {\n                    cookie.set(\"jwt\", \"\", { maxAge: 1, path:\"/\" });\n                    window.location.assign(\"/login\");\n                }\n            })\n        } catch (err) {\n            console.log(err);\n        }\n    }, []);\n\n    return (\n        <div className=\"wrap\">\n            { loggedIn && <>\n                <div className=\"section form\">\n                    <input className=\"input\" placeholder=\"problem name\" type=\"text\" onChange={e => setName(e.target.value)} />\n                    <input className=\"input\" placeholder=\"contest id\" type=\"text\" onChange={e => setContestId(e.target.value)} />\n                    <input className=\"input\" placeholder=\"time limit\" type=\"number\" onChange={e => setTimeLimit(e.target.value)} />\n                    <input className=\"input\" placeholder=\"memory limit\" type=\"number\" onChange={e => setMemoryLimit(e.target.value)} />\n                    <input className=\"input\" placeholder=\"tags {space separated}\" type=\"text\" onChange={e => setTags(e.target.value)} />\n                </div>\n                <div className=\"section\">\n                    <h1> Problem Statement, input and output </h1>\n                    <div className=\"editor-box\">\n                        <div className=\"editor-wrapper\">\n                            <Editor\n                                height=\"50vh\"\n                                width=\"50vw\"\n                                language={\"markdown\"}\n                                value={statement}\n                                onChange={(e) => setStatement(e)}\n                                className=\"editor\"\n                            />\n                        </div>\n                        <div className=\"preview-wrapper\">\n                            <Markdown statement={statement} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"section\">\n                    <h1> Problem samples and testcases </h1>\n                    <Editor\n                        height=\"50vh\"\n                        width=\"50vw\"\n                        language={\"json\"}\n                        value={_testcases}\n                        onChange={(e) => setTestcases(e)}\n                        className=\"editor\"\n                    />\n                </div>\n                <div className=\"section\">\n                    <button onClick={handleSubmit}> Create Problem </button>\n                    { info && <h4> { info } </h4>}\n                </div>\n            </> }\n        </div>\n    );\n}\n \nexport default CreateProblem;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { atomOneLight } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport '../styles/users.css'\n\nconst RecentUserSubmission = () => {\n    const { userId } = useParams();\n    const [userSubmission, setUserSubmission] = useState([]);\n    const [isOpen, setIsOpen] = useState(false);\n    const [code, setCode] = useState('');\n    useEffect(() => {\n        try {\n            fetch(`http://localhost:3000/api/v1/submission/user/${userId}?limit=10`)\n                .then(async (response) => {\n                    const parsedResponse = await response.json();\n                    console.log(parsedResponse);\n                    if (response.status === 200) {\n                        setUserSubmission(parsedResponse.data);\n                    }\n                })\n        } catch (err) {\n            console.log(err)\n        }\n    }, [])\n    function convertUTCDateToLocalDate(date) {\n        var newDate = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\n\n        var offset = date.getTimezoneOffset() / 60;\n        var hours = date.getHours();\n\n        newDate.setHours(hours - offset - 3);\n\n        return newDate;\n    }\n    const handleClose = () => {\n        setIsOpen(false);\n    };\n    const rowColor = (i) => {\n        return i % 2 != 1 ? '#343a40' : '#fafafa'\n    }\n    const fontColor = (i) => {\n        return i % 2 != 1 ? '#fff' : 'black'\n    }\n    const colorVerdict = (verdict) => {\n        switch (verdict) {\n            case \"Accepted\":\n                return \"#0a0\"\n            default:\n                return \"#ff0000\"\n        }\n    }\n    return (\n        <div style={{display:'flex' , justifyContent:'center', marginTop:'80px'}}>\n            {userSubmission &&\n                <table className='table' style={{ width: \"90%\", boxShadow: \"0px 1px 12px #888888\" }}>\n                    <tr className='header' style={{margin:'1em'}}>\n                        <th style={{fontWeight:\"bolder\", fontSize:'1.2rem'}}>Code</th>\n                        <th style={{fontWeight:\"bolder\", fontSize:'1.2rem'}}>Problem</th>\n                        <th style={{fontWeight:\"bolder\", fontSize:'1.2rem'}}>Language</th>\n                        <th style={{fontWeight:\"bolder\", fontSize:'1.2rem'}}>Verdict</th>\n                        <th style={{fontWeight:\"bolder\", fontSize:'1.2rem'}}>Time</th>\n                        <th style={{fontWeight:\"bolder\", fontSize:'1.2rem'}}>Memory</th>\n                        <th style={{fontWeight:\"bolder\", fontSize:'1.2rem'}}>Issued at</th>\n                    </tr>\n                    <Dialog\n                        open={isOpen}\n                        onClose={handleClose}\n                        BackdropProps={{\n                            backgroundColor: \"transparent\",\n                            boxShadow: \"none\",\n                            overflow: \"hidden\",\n                            opacity: \"50%    \"\n                        }\n                        }\n                    >\n\n                        <DialogContent style={{ width: \"300px\", height: \"300px\" }}>\n                            <SyntaxHighlighter language=\"cpp\" style={atomOneLight}>\n                                {code}\n                            </SyntaxHighlighter>\n                        </DialogContent>\n\n                    </Dialog>\n                    {userSubmission.map((item, index) => {\n                        var time = convertUTCDateToLocalDate(new Date(item.createdAt)).toLocaleString();\n                        return (\n                            <tr style={{ marginInline: '1em', backgroundColor: rowColor(index) }}>\n                                <td style={{ fontWeight: \"700\", textAlign: 'center', cursor:'pointer', color: fontColor(index) }} onClick={() => { setIsOpen(true); setCode(item.code) }}>\n                                    {item._id}\n                                </td>\n                                <td style={{ textAlign: 'center', display: 'flex', justifyContent: 'center', padding: '1em', gap: \"12px\", color: fontColor(index) }}>\n                                    <a href={`/problem/${item.problemId._id}`}>\n                                        {item.problemId.name}\n                                    </a>\n                                </td>\n                                <td style={{ textAlign: 'center', padding: '1em', gap: \"12px\", color: fontColor(index) }}>\n                                    {item.language}\n                                </td>\n                                <td style={{ fontWeight: \"700\", color: colorVerdict(item.verdict), textAlign: 'center', color: fontColor(index) }}>\n                                    {item.verdict}\n                                </td>\n                                <td style={{ textAlign: 'center', padding: '1em', gap: \"12px\", color: fontColor(index) }}>\n                                    {item.executionTime}\n                                </td>\n                                <td style={{ textAlign: 'center', padding: '1em', gap: \"12px\", color: fontColor(index) }}>\n                                    {item.memoryUsage}\n                                </td>\n                                <td style={{ textAlign: 'center', padding: '1em', gap: \"12px\", color: fontColor(index) }}>\n                                    {time}\n                                </td>\n\n                            </tr>\n\n                        )\n                    })}\n                </table>\n            }\n        </div>\n    );\n}\n\nexport default RecentUserSubmission;","import { max } from 'lodash';\nimport React, { useState, useEffect } from 'react';\nimport \"../styles/CreateContest.css\";\nimport Button from '@mui/material/Button';\nimport { useForkRef } from '@mui/material';\n\nconst ContestBox = () => {\n    const [numOfProblems, setNumOfProblems] = useState(1);\n    const [inputs, setInputs] = useState([]);\n    const [problems, setproblems] = useState([]);\n    const [selectedProblems, setSelectedProblems] = useState({})\n    const [contestData, setContestData] = useState({})\n    const [error, setError] = useState(\"\")\n    useEffect(() => {\n        fetch(\"http://localhost:3000/api/v1/problem/all\")\n            .then(async (response) => {\n                const parsedResponse = await response.json();\n                if (response.status === 200) {\n                    setproblems(parsedResponse.data);\n                }\n            })\n    }, []);\n\n    const handleChange = (e, field) => {\n        const value = e.target.value\n        setSelectedProblems((selectedProblems) => {\n            selectedProblems[field] = value;\n            return selectedProblems\n        })\n    }\n\n    const handleContestChange = (e, field) => {\n        const value = e.target.value\n        setContestData((contestData) => {\n            contestData[field] = value;\n            return contestData\n        })\n    }\n\n    const handleCreate = async () =>{\n        let problems = []\n        let keys = Object.keys(selectedProblems) \n        for(let i = 0 ; i<keys.length ; i++){\n            console.log(keys[i])\n            if(selectedProblems[keys[i]] === 'None')\n                continue;\n            if(problems.includes(selectedProblems[keys[i]])){\n                setError(\"Problem is already choosen\");\n                return ;\n            }\n            problems.push(selectedProblems[keys[i]]);\n        }\n        contestData['numberOfProblems'] = problems.length;\n        const response = await fetch('http://localhost:3000/api/v1/contest/new', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(contestData)\n        })\n\n    }\n\n    return (\n        <div className='container'>\n            {error && <h4 style={{color:'red'}}>{error}</h4>}\n            <div style={{ padding: \"2em\", fontSize: '30px', textAlign: 'center' }}>Create Contest</div>\n            <div style={{ display: 'flex' }}>\n                <div style={{ width: '50%', marginLeft: '15px' }}>\n                    <div style={{ display: 'flex', marginTop: \"10px\", alignItems: 'center' }}>\n                        <div style={{ fontSize: \"20px\", width: '30%' }}>Contest Name</div>\n                        <input type=\"text\" id=\"fname\" name=\"fname\" style={{ width: '45%' }} placeholder=\"Best contest ever\" onChange = {(e) => { handleContestChange(e, \"contestName\") }}/>\n                    </div>\n                    <div style={{ display: 'flex', marginTop: \"10px\", alignItems: 'center' }}>\n                        <div style={{ fontSize: \"20px\", width: '30%' }}>Starting Time</div>\n                        <input type=\"datetime-local\" min='1' style={{ width: '30%' }} onChange = {(e) => { handleContestChange(e, \"startTime\") }}/>\n                    </div>\n                    <div style={{ display: 'flex', marginTop: \"10px\", alignItems: 'center' }}>\n                        <div style={{ fontSize: \"20px\", width: '30%' }}>Duration<sub style={{ fontSize: \"15px\" }}>(in minutes)</sub></div>\n                        <input type=\"number\" min='1' style={{ width: '20%' }} onChange = {(e) => { handleContestChange(e, \"duration\") }}/>\n                    </div>\n                </div>\n\n\n                <div className='vertical' />\n                <div style={{ display: 'flex', flexDirection: 'column', width: '40%', justifyContent: 'space-around' }}>\n                    {problems &&\n                        <>\n                            <div style={{ display: 'flex', justifyContent: \"space-evenly\" }}>\n                                <div>\n                                    <div>Select Problem</div>\n                                    <select name=\"problem\" onChange={(e) => { handleChange(e, \"problem1\") }} >\n                                        <option value='none'>None</option>\n                                        {problems.map((problem, idx) => {\n                                            return (\n                                                <option key={idx} value={problem._id}>{problem.name}</option>\n                                            )\n                                        })}\n                                    </select>\n                                </div>\n                                <div>\n                                    <div>Select Problem</div>\n                                    <select name=\"problem\" onChange={(e) => { handleChange(e, \"problem2\") }} >\n                                        <option value='none'>None</option>\n                                        {problems.map((problem, idx) => {\n                                            return (\n                                                <option key={idx} value={problem._id}>{problem.name}</option>\n                                            )\n                                        })}\n                                    </select>\n                                </div>\n                            </div>\n                            <div style={{ display: 'flex', justifyContent: \"space-evenly\" }}>\n                                <div>\n                                    <div>Select Problem</div>\n                                    <select name=\"problem\" onChange={(e) => { handleChange(e, \"problem3\") }} >\n                                        <option value='none'>None</option>\n                                        {problems.map((problem, idx) => {\n                                            return (\n                                                <option key={idx} value={problem._id}>{problem.name}</option>\n                                            )\n                                        })}\n                                    </select>\n                                </div>\n                                <div>\n                                    <div>Select Problem</div>\n                                    <select name=\"problem\" onChange={(e) => { handleChange(e, \"problem4\") }} >\n                                        <option value='none'>None</option>\n                                        {problems.map((problem, idx) => {\n                                            return (\n                                                <option key={idx} value={problem._id}>{problem.name}</option>\n                                            )\n                                        })}\n                                    </select>\n                                </div>\n                            </div>\n                            <div style={{ display: 'flex', justifyContent: \"space-evenly\" }}>\n                                <div>\n                                    <div>Select Problem</div>\n                                    <select name=\"problem\" onChange={(e) => { handleChange(e, \"problem5\") }} >\n                                        <option value='none'>None</option>\n                                        {problems.map((problem, idx) => {\n                                            return (\n                                                <option key={idx} value={problem._id}>{problem.name}</option>\n                                            )\n                                        })}\n                                    </select>\n                                </div>\n                                <div>\n                                    <div>Select Problem</div>\n                                    <select name=\"problem\" onChange={(e) => { handleChange(e, \"problem6\") }} >\n                                        <option value='none'>None</option>\n                                        {problems.map((problem, idx) => {\n                                            return (\n                                                <option key={idx} value={problem._id}>{problem.name}</option>\n                                            )\n                                        })}\n                                    </select>\n                                </div>\n                            </div>\n                            <div style={{ display: 'flex', justifyContent: \"space-evenly\" }}>\n                                <div>\n                                    <div>Select Problem</div>\n                                    <select name=\"problem\" onChange={(e) => { handleChange(e, \"problem7\") }} >\n                                        <option value='none'>None</option>\n                                        {problems.map((problem, idx) => {\n                                            return (\n                                                <option key={idx} value={problem._id}>{problem.name}</option>\n                                            )\n                                        })}\n                                    </select>\n                                </div>\n                                <div>\n                                    <div>Select Problem</div>\n                                    <select name=\"problem\" onChange={(e) => { handleChange(e, \"problem8\") }} >\n                                        <option value='none'>None</option>\n                                        {problems.map((problem, idx) => {\n                                            return (\n                                                <option key={idx} value={problem._id}>{problem.name}</option>\n                                            )\n                                        })}\n                                    </select>\n                                </div>\n                            </div>\n\n\n\n                        </>\n                    }\n                </div>\n            </div>\n            <div style={{paddingBlock:'2em'}}>\n            <Button variant=\"contained\" style={{width:'70%'}} onClick = {handleCreate}>Create</Button>\n\n            </div>\n        </div>\n    );\n}\n\nexport default ContestBox;","import React, { useEffect, useState } from \"react\";\nimport ContestBox from '../components/ContestBox';\n\nconst CreateContest = (props) => {\n\n\n    return (\n        <center>\n            <ContestBox />\n        </center>\n    );\n}\n \nexport default CreateContest;\n","import React, { useEffect, useState } from \"react\";\nimport Problem from \"./Problem\";\nimport { useParams } from 'react-router-dom';\n\nconst Contests = () => {\n    const [contest, setContest] = useState(null);\n\n    const [message, setMessage] = useState(\"\");\n    const { contestId } = useParams();\n    const [problems, setProblem] = useState(null);\n    const [number, setNumber] = useState(1);\n\n\n    useEffect(() => {\n        try {\n            fetch(`http://localhost:3000/api/v1/contest/${contestId}`, {\n\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n            })\n                .then((response => response.json()))\n                .then((responseJson) => {\n                    console.log(responseJson)\n                    setContest(responseJson.data);\n\n\n                })\n            fetch(`http://localhost:3000/api/v1/problem/contest/${contestId}`, {\n\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n            })\n                .then((response => response.json()))\n                .then((responseJson) => {\n                    console.log(responseJson)\n                    setProblem(responseJson.data);\n                    setNumber( number+1 );\n\n\n                })\n\n\n        }\n        catch (err) {\n            console.log(err);\n        }\n    }, []);\n\n\n\n\n\n\n\n    return (\n        <>\n            <h2> problems</h2>\n\n            {problems && contest &&\n                <>\n                    <h3> {contest.contestName} </h3>\n\n                    <table style={{ \"border\": \"5px solid black\", textAlign: \"left\" }}>\n                        <tr style={{ \"border\": \"5px solid black\", textAlign: \"left\" }} >\n                            <th> # </th>\n                            <th> Name </th>\n                        </tr>\n                        {problems.map((problem, idx ) => {\n                            return (\n                                \n\n                                <tr key={idx}>\n                                    <td>{idx+1 }</td>\n                                    <td><a href={\"/problem/\"+problem._id}>{problem.name}</a></td>\n                                </tr>\n                            )\n                        })}\n                    </table> </>}\n        </>);\n\n\n\n\n\n\n}\n\nexport default Contests;","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { atomOneLight } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport Avatar from '@mui/material/Avatar';\n\nconst Profile = () => {\n    const [profile, setProfile] = useState([]);\n    const { userId } = useParams();\n    const [userSubmissions, setUserSubmissions] = useState([]);\n    const [isOpen, setIsOpen] = useState(false);\n    const [code, setCode] = useState('');\n\n\n\n    useEffect(() => {\n        try {\n            fetch(`http://localhost:3000/api/v1/user/${userId}`, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n            }).then((response => response.json()))\n                .then((responseJson) => {\n                    setProfile(responseJson.data);\n                })\n            fetch(`http://localhost:3000/api/v1/submission/user/${userId}?limit=10`, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n            }).then((response => response.json()))\n                .then((responseJson) => {\n                    setUserSubmissions(responseJson.data);\n                    console.log(responseJson.data)\n                })\n\n        }\n        catch (err) {\n            console.log(err);\n        }\n       \n\n    }, []);\n    const handleClose = () => {\n        setIsOpen(false);\n    };\n    const colorVerdict = (verdict) => {\n        switch (verdict) {\n            case \"Accepted\":\n                return \"#0a0\"\n            default:\n                return \"#ff0000\"\n        }\n    }\n    function convertUTCDateToLocalDate(date) {\n        var newDate = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);\n\n        var offset = date.getTimezoneOffset() / 60;\n        var hours = date.getHours();\n\n        newDate.setHours(hours - offset - 3);\n\n        return newDate;\n    }\n\n\n    return (\n        \n        <>\n        <Avatar src=\"/logo.png\" style={{marginRight:\"0.7em\", width:'42px', height:'42px'}}/>\n            {profile && userSubmissions.length &&\n                <>\n\n                    <h3>name : {profile.name}</h3>\n                    <h3> full name : {profile.username}</h3>\n                    <h3> country : {profile.country}</h3>\n                    <h3> role : {profile.type}</h3>\n                    <table style={{ width: \"100%\", \"border\": \"5px solid black\" }} >\n\n\n                        <tr style={{ \"border\": \"5px solid black\", textAlign: \"left\" }}>\n                            <th> code</th>\n                            <th>problem ID</th>\n                            <th>language</th>\n                            <th>verdict</th>\n                            <th>Time</th>\n                            <th>memory</th>\n                            <th> Time</th>\n                        </tr>\n                        <Dialog\n                            open={isOpen}\n                            onClose={handleClose}\n                            BackdropProps={{\n                                backgroundColor: \"transparent\",\n                                boxShadow: \"none\",\n                                overflow: \"hidden\",\n                                opacity: \"50%    \"\n                            }\n                            }\n                        >\n\n                            <DialogContent style={{ width: \"300px\", height: \"300px\" }}>\n                                <SyntaxHighlighter language=\"cpp\" style={atomOneLight}>\n                                    {code}\n                                </SyntaxHighlighter>\n                            </DialogContent>\n\n                        </Dialog>\n\n\n                        {userSubmissions.map((item, index) => {\n                        var time = convertUTCDateToLocalDate(new Date(item.createdAt)).toLocaleString();\n                        return (\n                            <tr key={index}>\n                                <td style={{ paddingBlock: \"1em\", cursor: 'pointer',color:\"#0000ff\" }} onClick={() => { setIsOpen(true); setCode(item.code) }}>\n                                    {item._id}\n                                </td>\n                                <td style={{ paddingBlock: \"1em\" }}>\n                                    <a href = {`/problem/${item.problemId._id}`}>\n                                        {item.problemId.name}\n                                    </a>\n                                </td>\n                                <td style={{ paddingBlock: \"1em\" }}>\n                                    {item.language}\n                                </td>\n                                <td style={{ marginBlock: \"1em\",color:colorVerdict(item.verdict) }} >\n                                    {item.verdict}\n                                </td>\n                                <td style={{ paddingBlock: \"1em\" }} >\n                                    {item.executionTime}\n                                </td>\n                                <td style={{ paddingBlock: \"1em\" }} >\n                                    {item.memoryUsage}\n                                </td>\n                                <td style={{ paddingBlock: \"1em\" }}>\n                                    {time}\n                                </td>\n\n                            </tr>\n\n                        )\n                    })}\n\n                    </table>\n                </>\n            }\n\n        </>\n    );\n\n\n\n\n\n}\n\nexport default Profile;","import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { Box,Link, Button, Table, TableBody, TableCell, TableHead, TableRow, TableContainer, Paper } from \"@mui/material\";\n\nimport \"../styles/AllProblems.css\";\n\nconst AllProblems = (props) => {\n\n    const [allProblems, setAllProblems] = useState([]);\n    const [page, setPage] = useState(1);\n    const [more, setMore] = useState(true);\n\n\n    useEffect(() => {\n        try {\n            fetch(`http://localhost:3000/api/v1/problem/all?page=${page}`, {\n                method:\"GET\"\n            })\n            .then((response) => response.json())\n            .then(({ message, data }) => { setMore(message); setAllProblems(data); });\n        } catch (err) {\n            console.log(err);\n        }\n    }, [page]);\n    const rowColor = (i) => {\n        return i % 2 != 1 ? '#343a40' : '#fafafa'\n    }\n    const fontColor = (i) => {\n        return i % 2 != 1 ? '#fff' : 'black'\n    }\n    return (\n        <Box className=\"all-problems-wrapper\">\n            <Box className=\"all-problems\">\n                <Box component={Paper} className=\"flex-row-gap pagination-controls\">\n                    <Button variant=\"contained\" color=\"secondary\" onClick={ ()=>{setPage(page-1);} } disabled = {page === 1}> Previous </Button>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={ ()=>{setPage(page+1);} } disabled = {more === false}> Next </Button>\n                </Box>\n                <TableContainer component={Paper}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">\n                                Problem Name\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                Contest ID\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                Memory Limit\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                Time Limit\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                Tags\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        { allProblems && allProblems.map((problem, index) => {\n                                return (\n                                    <TableRow style = {{backgroundColor:rowColor(index)}}>\n                                        <TableCell align=\"center\">\n                                            <Link color=\"primary\" target=\"_blank\" href={`/problem/${problem._id}`} style = {{color:fontColor(index)}}> { problem.name } </Link>    \n                                        </TableCell>\n                                        <TableCell align=\"center\">\n                                            <Link color=\"primary\" target=\"_blank\" href={`/contest/${problem.contestId}`} style = {{color:fontColor(index)}}> { problem.contestId } </Link>\n                                        </TableCell>\n                                        <TableCell align=\"center\" style = {{color:fontColor(index)}}>\n                                            { problem.memoryLimit }\n                                        </TableCell>\n                                        <TableCell align=\"center\" style = {{color:fontColor(index)}}>\n                                            { problem.timeLimit }\n                                        </TableCell>\n                                        <TableCell align=\"center\" style = {{color:fontColor(index)}}>\n                                            { problem.tags }\n                                        </TableCell>\n                                    </TableRow>\n                                )\n                            })  \n                        }\n                    </TableBody>\n                </TableContainer>\n            </Box>\n        </Box>\n    );\n}\n \nexport default AllProblems;","import React, { useState } from \"react\";\nimport { Box, Button, Paper, TextField } from \"@mui/material\";\nimport Editor from \"@monaco-editor/react\";\nimport Markdown from \"../components/Markdown\";\n\nimport \"../styles/CreateBlog.css\";\nimport Cookies from \"universal-cookie\";\n\n\nconst sampleBlog = `# Hello World\n\n- this is a list item.\n\n`\n\nconst CreateBlog = (props) => {\n    const cookie = new Cookies();\n    const [blogTitle, setBlogTitle] = useState(\"\");\n    const [blog, setBlog] = useState(sampleBlog);\n    const [info, setInfo] = useState(\"\");\n\n    const handleSubmit = async () => {\n        const response = await fetch(\"http://localhost:3000/api/v1/blog/new\", {\n            method:\"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n                \"authorization\": `bearer ${cookie.get(\"jwt\")}`\n            },\n            body: JSON.stringify({ blogBody: blog, blogTitle })\n        });\n        \n        const jsonResponse = await response.json();\n        console.log(jsonResponse);\n    }\n\n    return (\n        <Box className=\"create-blog-wrapper\">\n            <Box component={Paper}>\n                <Box className=\"controls flex-row-gap align-center\">\n                    <TextField label=\"Blog title\" size=\"small\" value={blogTitle} onChange={(e) => setBlogTitle(e.target.value)}/>\n                    <Button onClick={handleSubmit} variant=\"contained\"> Create new Blog </Button>\n                </Box>\n                <Box className=\"create-blog\">\n                    <Editor\n                        options={{\n                            minimap: {\n                                enabled: false\n                            }\n                        }}\n                        height=\"80vh\"\n                        width=\"90%\"\n                        language={\"markdown\"}\n                        value={blog}\n                        onChange={(e) => setBlog(e)}\n                        className=\"editor\"\n                        />\n                    <Markdown statement={blog} />\n                </Box> \n            </Box>\n        </Box>\n    );\n}\n \nexport default CreateBlog;","import { Button } from '@mui/material';\nimport React, { useState, useEffect } from 'react';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/InputLabel';\n\n\nimport '../styles/users.css'\nconst Users = () => {\n    const [page, setPage] = useState(1);\n    const [username, setUsername] = useState(\"\");\n    const [country, setCountry] = useState(\"\");\n    const [users, setUsers] = useState([]);\n    const [message, setMessage] = useState('');\n    useEffect(() => {\n        console.log(country)\n        fetch(`http://localhost:3000/api/v1/user?page=${page}&name=${username}&country=${country}`)\n            .then(async (response) => {\n                const parsedResponse = await response.json();\n                if (response.status === 200) {\n                    setUsers(parsedResponse.data);\n                    setMessage(parsedResponse.message)\n                }\n            })\n    }, [page, username, country]);\n\n    const rowColor = (i) => {\n        return i % 2 == 1 ? '#343a40' : '#fafafa'\n    }\n    const fontColor = (i) => {\n        return i % 2 == 1 ? '#fff' : 'black'\n    }\n\n    const resetInputs = () => {\n        setUsername(\"\");\n        setCountry(\"\");\n    }\n\n    const handleNext = () => {\n        if (message === 'more')\n            setPage(page + 1);\n    }\n\n    const handlePrevious = () => {\n        if (page > 1)\n            setPage(page - 1);\n    }\n\n    return (\n        <div style={{ display: 'flex', justifyContent: 'space-evenly', paddingBlock: '100px' }}>\n            <div style={{ width: '60%', backgroundColor: \"rgb(250, 250, 250)\", height: 'auto', boxShadow: \"0px 1px 8px #888888\", borderRadius: '8px', display: 'flex', flexDirection: 'column', justifyContent: 'center' }} >\n                <table className='table'>\n                    <tr className='header' >\n                        <th style={{ textAlign: 'center', fontSize: \"23px\" }}>Username</th>\n                        <th style={{ textAlign: 'center', padding: '1em', fontSize: \"23px\" }}>Country</th>\n                        <th style={{ textAlign: 'center', fontSize: \"23px\" }}>Rating</th>\n                    </tr>\n\n                    {users &&\n                        users.map((user, index) => {\n                            return (\n                                user.username && <tr style={{ marginInline: '1em', backgroundColor: rowColor(index) }}>\n                                    <td style={{ textAlign: 'center', color: fontColor(index) }} >\n                                        <a href={\"user/\" + user._id}>{user.username}</a>\n                                    </td>\n                                    <td style={{ textAlign: 'center', display: 'flex', justifyContent: 'center', padding: '1em', gap: \"12px\" }}>\n                                        <img src={\"https://countryflagsapi.com/svg/\" + user.country} alt=\"Egypt flag\" style={{ width: '35px', height: '22px' }} title={user.country} />\n                                    </td>\n                                    <td style={{ fontWeight: \"600\", textAlign: 'center', color: fontColor(index) }}>1243</td>\n                                </tr>\n                            )\n                        })\n                    }\n\n                </table>\n                <div style={{ display: 'flex', justifyContent: 'flex-end', padding: '20px' }}>\n                    <Button color='secondary' variant='contained' style={{ marginRight: '2em', width: '130px' }} onClick={handlePrevious} disabled ={page === 1}>Previous</Button>\n                    <Button color='secondary' variant='contained' style={{ width: '130px' }} onClick={handleNext} disabled = {message === 'nomore'}>Next</Button>\n                </div>\n            </div>\n            <div className='filter'>\n                <div style={{ textAlign: 'center', padding: '.5em', fontSize: '2rem' }}>Filter</div>\n                <hr />\n                <InputLabel id=\"demo-simple-select-label\" style={{ marginLeft: '1em',marginTop:'1em' }}>User</InputLabel>\n                <TextField Label=\"Username\" color=\"secondary\" value={username} type=\"text\" id=\"fname\" name=\"fname\" style={{ marginBottom:'1em',marginLeft: '1em', width: '75%' }} onChange={(e) => setUsername(e.target.value)} />\n                <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\" style={{ marginLeft: '1em' }}>Country</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={country}\n                        style={{ width: '75%', marginLeft: '1em' }}\n                        color='secondary'\n                        onChange={(e) => { setPage(1); setCountry(e.target.value) }}\n                    >\n                        <MenuItem value=''>Any</MenuItem>\n                        <MenuItem value='JO'>Jordan</MenuItem>\n                        <MenuItem value='EG'>Egypt</MenuItem>\n                        <MenuItem value='SY'>Syria</MenuItem>\n                        <MenuItem value='PS'>Palestine</MenuItem>\n                        <MenuItem value='US'>United States</MenuItem>\n                        <MenuItem value='ENGLAND'>England</MenuItem>\n                        <MenuItem value='RU'>Russia</MenuItem>\n                    </Select>\n                </FormControl>\n                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', padding: '1em', width: \"100%\" }}><Button onClick={resetInputs} variant='contained' color='secondary' style={{ width: '75%' }}>Reset</Button></div>\n            </div>\n        </div>\n    );\n}\n\nexport default Users;","import React, { useState, useEffect } from 'react';\nimport ContestsTable from '../components/ContestsTable';\nimport '../styles/AllContests.css'\n\nconst AllContests = () => {\n    useEffect(() => {\n        \n    }, []);\n    return (\n        <div style={{ display: 'flex', justifyContent: 'space-evenly', paddingBlock: '100px' }}>\n            <ContestsTable contestsNumber={10} />\n            <div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default AllContests;","import { Box } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport React from 'react';\n\nconst AdminPanel = (props) => {\n    return (\n        <Box className=\"flex-col-gap\" sx={{padding:5}}>\n            <Link to=\"/admin/problem/create\"> Create a new Problem </Link>\n            <Link to=\"/admin/contest/create\"> Create a new Contest </Link>\n            <Link to=\"/admin/blog/create\"> Create a new Blog </Link>\n        </Box>\n    );\n}\n \nexport default AdminPanel;","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Markdown from '../components/Markdown';\n\n\nconst Blog = () => {\n    const { blogId } = useParams();\n    const [blog, setBlog] = useState({});\n    useEffect(() => {\n        fetch(`http://localhost:3000/api/v1/blog/${blogId}`)\n            .then((response) => response.json())\n            .then(({ message, data }) => { setBlog(data); });\n    }, []);\n    console.log(blog)\n\n    return (\n        <div>\n            {blog && blog.userId &&\n                <div>\n                    <h2>{blog.blogTitle}</h2>\n                    <h3>By:{blog.userId.name}</h3>\n                    <Markdown statement={blog.blogBody} />\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default Blog;","import React, { useState, useEffect } from 'react';\nimport Cookies from 'universal-cookie';\nimport \"../styles/navbar.css\"\nimport { GoCode } from 'react-icons/go';\nimport { Avatar, Menu, MenuItem } from '@mui/material';\n\n\nconst Navbar = () => {\n    const cookie = new Cookies();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [user, setUser] = useState({});\n    const token = cookie.get(\"jwt\");\n\n    const [open, setOpen] = useState(false);\n\n    const handleOpen = (e) => {\n        setAnchorEl(e.currentTarget);\n        setOpen(true);\n    }\n\n    const handleClose = (to) => {\n        setOpen(false);\n        setAnchorEl(null);\n        if(to === \"admin\")\n            window.location.assign(\"/admin\");\n        else if(to === \"profile\")\n            window.location.assign(`/user/${user.id}`);\n    } \n\n    const handleLogout = () => {\n        cookie.set(\"jwt\", \"\", { maxAge: 1, path: \"/\" });\n\n        window.location.assign(\"/home\");\n    }\n\n    useEffect(() => {\n        const token = cookie.get(\"jwt\");\n\n        try {\n            fetch(\"http://localhost:3000/api/v1/user/jwt\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({ token })\n            }).then((response => response.json()))\n                .then((responseJson) => {\n                    if (responseJson.message === 'Authorized') {\n                        setLoggedIn(true);\n                        setUser(responseJson.data);\n                    }\n                    else {\n                        setLoggedIn(false);\n                        setUser({});\n                    }\n                })\n        }\n        catch (err) {\n            console.log(err);\n        }\n    }, []);\n\n\n    return (\n        <>\n\n            {\n                loggedIn &&\n                <>\n                    <div className=\"nav\" >\n                        <div className='brand'>\n                            <a style={{ marginRight: \"5px\", fontSize: \"26px\" }} href=\"/home\">NAME HERE</a>\n                            <GoCode size='1.2em' color='orange' />\n                        </div>\n                        <div className='links'>\n                            <a href=\"/problems\">Problems</a>\n                            <a href=\"/contests\">Contests</a>\n                            <a href=\"/allsubmision\">Submissions</a>\n                            <a href=\"/users\">Users</a>\n                        </div>\n                        <div className='profile'>\n                            <div>\n                                <Avatar \n                                    onClick={ handleOpen }\n                                    aria-controls={open ? 'basic-menu' : undefined}\n                                    aria-haspopup=\"true\"\n                                    aria-expanded={open ? 'true' : undefined}\n                                    src=\"/mock.png\" style={{cursor:'pointer', marginRight:\"0.7em\", width:'42px', height:'42px'}} />\n                                <Menu open={open} anchorEl={anchorEl} onClose={handleClose}>\n                                    <MenuItem onClick={ (e) => handleClose(\"profile\") }> Profile </MenuItem>\n                                    { user.type === \"Admin\" &&\n                                        <MenuItem onClick={ (e) => handleClose(\"admin\") }> Admin Panel </MenuItem>\n                                    }\n                                </Menu>\n                            </div>\n                            <a className ='logout' onClick={handleLogout} href=\"#\" style={{marginRight:\"0.7em\"}}>Logout</a>\n                        </div>\n                    </div>\n\n                </>\n            }\n            {!loggedIn &&\n                <>\n                    <div className=\"nav\" >\n                        <div className='brand'>\n                            <a style={{ marginRight: \"5px\", fontSize: \"26px\" }} href=\"/home\">NAME HERE</a>\n                            <GoCode size='1.2em' color='orange' />\n                        </div>\n                        <div className='links'>\n                            <a href=\"/problems\">Problems</a>\n                            <a href=\"/contests\">Contests</a>\n                            <a href=\"/allsubmision\">Submissions</a>\n                            <a href=\"/users\">Users</a>\n                        </div>\n                        <div className='profile links'>\n                            <a href = \"/login\" style={{marginRight:'1em'}}>Login</a>\n                            <a className ='logout'  href=\"/register\" style={{marginRight:\"0.7em\"}}>Register</a>\n                        </div>\n                    </div>\n                </>\n            } \n        </> \n    );\n}\n\nexport default Navbar;","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport {\n  Home, Login, Submit, Register, Problem, SubmitCode,\n  CreateProblem, AllSubmision, RecentUserSubmission,\n  CreateContest, Contests, AllProblems,Blog,\n  CreateBlog, Users, AllContests, Profile, AdminPanel\n} from './views/index';\nimport Navbar from './components/Navbar'\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\n\nimport \"./styles/global.css\"\n\nconst App = () => {\n  const theme = createTheme({\n    palette: {\n      primary: {\n        main: '#343a40',\n      },\n      secondary: {\n        main: '#f6a600',\n        contrastText: '#fafafa',\n        light: '#0066ff',\n      },\n    }\n  });\n  return (\n    <ThemeProvider theme={theme}>\n      <div style={{ display: \"flex\", flexDirection: 'column',height:'100%' }}>\n        <Navbar />\n        <Router>\n          <Routes>\n            <Route exact path=\"/register\" element={<Register />} />\n            <Route exact path=\"/home\" element={<Home />} />\n            <Route exact path=\"/login\" element={<Login />} />\n            <Route exact path=\"/submit\" element={<Submit />} />\n            <Route exact path=\"/submit/:problemId\" element={<SubmitCode />} />\n            <Route exact path=\"/allsubmision\" element={<AllSubmision />} />\n            <Route exact path=\"/problem/:problemId\" element={<Problem />} />\n            <Route exact path=\"/recent/:userId\" element={<RecentUserSubmission />} />\n            <Route exact path=\"/contests/:contestId\" element={<Contests />} />\n            <Route exact path=\"/problems\" element={<AllProblems />} />\n            <Route exact path=\"/users\" element={<Users />} />\n            <Route exact path=\"/contests\" element={<AllContests />} />\n            <Route exact path=\"/user/:userId\" element={<Profile />} />\n            <Route exact path=\"/blog/:blogId\" element={<Blog />} />\n            {/* admin stuff */}\n            <Route exact path=\"/admin\" element={ <AdminPanel /> } />\n            <Route exact path=\"/admin/problem/create\" element={<CreateProblem />} />\n            <Route exact path=\"/admin/contest/create\" element={<CreateContest />} />\n            <Route exact path=\"/admin/blog/create\" element={<CreateBlog />} />\n\n          </Routes>\n        </Router>\n      </div>\n    </ThemeProvider >\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"sourceRoot":""}